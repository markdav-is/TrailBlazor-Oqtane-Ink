@using MarkDav.Module.Ink.Services
@using MarkDav.Module.Ink.Models
@using InkRuntime = global::Ink.Runtime;
@using global::Ink


@namespace MarkDav.Module.Ink
@inherits ModuleBase
@inject IInkService InkService
@inject NavigationManager NavigationManager
@inject ISettingService SettingService

@if (PageState.EditMode)
{
    <h2>@ModuleState.Title</h2>
}
else if (_prompt == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-6">
                <div class="text-center">
                    <p>
                        @_prompt
                    </p>
                </div>
            </div>
        </div>
    </div>
}

@code {
 
    protected InkRuntime.Story _story = null;
    private string _prompt;


    protected override async Task OnInitializedAsync()
    {
        // Load the Ink story from settings
        var settings = await SettingService.GetModuleSettingsAsync(ModuleState.ModuleId);
        var ink = SettingService.GetSetting(settings, "Ink", "");

    
        if (!string.IsNullOrEmpty(ink))
        {
            // Compile the Ink story
      
            var compiler = new Compiler(ink);
            try{
                _story = compiler.Compile(); // this can fail if the ink is invalid
                Continue();
            }
            catch (Exception ex)
            {
                AddModuleMessage(ex.Message, MessageType.Error);
            }

        }
    }

    private void Continue()
    {
        if (_story != null && _story.canContinue)
        {
            _prompt = _story.ContinueMaximally();
        }
    }
}